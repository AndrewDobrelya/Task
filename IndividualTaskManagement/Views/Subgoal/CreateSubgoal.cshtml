@using IndividualTaskManagement.Models
@model CreateSubgoalModel
@{
    ViewBag.Title = "CreateSubgoal";

    //var student = new ApplicationDbContext().Users;
    //var student = new ApplicationDbContext().Roles.Where(p => p.Name == "student").SelectMany(p => p.Users).ToList();
    var users = new ApplicationDbContext().Users;
    var rolesIdToUser = new ApplicationDbContext().Roles.Where(p => p.Name == "student").SelectMany(p => p.Users).ToList();
    var student = rolesIdToUser.Select(i => users.FirstOrDefault(u => u.Id == i.UserId));

}

<h2>CreateSubgoal</h2>

@if (User.IsInRole("teacher"))
{
    <h2>Create Task</h2>

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Subtask</h4>
            <hr />
            @Html.ValidationSummary(true)

            <div class="form-group">              
                @Html.LabelFor(model => model.name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.name, new { @class = " col-md-4" })
                    @Html.ValidationMessageFor(model => model.name)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.student_id, new { @class = "control-label col-md-2" })
               
                <div class="col-md-10">                    
                    @Html.DropDownListFor(model => model.student_id, new SelectList(student, "Id", "LastName"), new { @class = "col-md-4" })
                    @Html.ValidationMessageFor(model => model.student_id)
                </div>
            </div>
      
            <div class="form-group">
                @Html.LabelFor(model => model.description, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.description, new { @class = " col-md-4" })
                    @Html.ValidationMessageFor(model => model.description)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.endDate, new { @class = "control-label col-md-2" })
                <div class="col-md-10">                  
                    <input type="date" name="endDate">

                    @Html.ValidationMessageFor(model => model.endDate)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
            
        </div>
      
    }
    <div>
        @Html.ActionLink("Back to the list", "Index")
    </div>
  
}
else
{
    <h3>
        @Html.Label("There is no access to this page")
    </h3>
}

